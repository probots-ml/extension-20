{
  "ColorLedRGB.Black|block": "black",
  "ColorLedRGB.Blue|block": "blue",
  "ColorLedRGB.Cyan|block": "cyan",
  "ColorLedRGB.Green|block": "green",
  "ColorLedRGB.Orange|block": "orange",
  "ColorLedRGB.Red|block": "red",
  "ColorLedRGB.Violet|block": "violet",
  "ColorLedRGB.White|block": "white",
  "ColorLedRGB.Yellow|block": "yellow",
  "Colors.Black|block": "black",
  "Colors.Blue|block": "blue",
  "Colors.Green|block": "green",
  "Colors.Orange|block": "orange",
  "Colors.Purple|block": "purple",
  "Colors.Red|block": "red",
  "Colors.Violet|block": "violet",
  "Colors.White|block": "white",
  "Colors.Yellow|block": "yellow",
  "DHTtype.DHT11|block": "DHT11",
  "DHTtype.DHT22|block": "DHT22",
  "MotorDirection.backward|block": "backward",
  "MotorDirection.forward|block": "forward",
  "RegisterHelper|block": "RegisterHelper",
  "dataType.humidity|block": "humidity",
  "dataType.temperature|block": "temperature",
  "probots.Motor.motorOff|block": "%motor turn off",
  "probots.Motor.motorOn|block": "%motor turn on direction %dir=MotorDirection speed $speed",
  "probots.ambientHumidity|block": "get humidity on %myPort=brickPort",
  "probots.ambientTemperature|block": "get temperature on %myPort=brickPort in $scale=tempType",
  "probots.brickPort4Pins|block": "4 pins %portToUse",
  "probots.brickPortADC|block": "ADC %portToUse",
  "probots.brickPortI2C|block": "I2C %portToUse",
  "probots.brickPort|block": "%portToUse",
  "probots.buzzerActiveOff|block": "turn buzzer off on %myPort=brickPort4Pins",
  "probots.buzzerActiveOn|block": "turn buzzer on on %myPort=brickPort4Pins",
  "probots.buzzerPasiveOff|block": "turn buzzer off on %myPort=brickPort4Pins",
  "probots.buzzerPasiveOn|block": "turn buzzer on on %myPort=brickPort4Pins",
  "probots.capacitiveSensor|block": "capacitive sensor touched on %myPort=brickPort",
  "probots.createMotor|block": "create motor on %myPort=brickPort",
  "probots.createOLED|block": "init OLED in I2C address $i2cAddress",
  "probots.flameSensor|block": "It is a presence of flame in %myPort=brickPortADC",
  "probots.getSensorData|block": "get color data %colorId=RGB",
  "probots.hallSensor|block": "magnetique fiel detected on %myPort=brickPort",
  "probots.infraredIsOn|block": "sensor IR detects objects on %myPort=brickPort",
  "probots.initSensor|block": "Init Color Sensor I2C",
  "probots.isButtonPressed|block": "button was pressed on %myPort=brickPort",
  "probots.isLimitSwitchReached|block": "limit switch was reached on %myPort=brickPort",
  "probots.laserOff|block": "turn off Laser on %myPort=brickPort",
  "probots.laserOnWithPower|block": "turn Laser on %myPort=brickPort with intensity %intensity",
  "probots.laserOn|block": "turn on Laser on %myPort=brickPort",
  "probots.ldrValue|block": "LDR value on %myPort=brickPortADC || show in console $showInSerialPort",
  "probots.ledOff|block": "turn off LED on %myPort=brickPort",
  "probots.ledOnWithPower|block": "turn on LED on %myPort=brickPort with intensity %intensity",
  "probots.ledOn|block": "turn on LED on %myPort=brickPort",
  "probots.microphoneDetectSound|block": "there is a sound %db=soundIntensity in port %myPort=brickPortADC",
  "probots.newStripNeopixel|block": "Probot on $commPort=brickPort| of $ledsQuantity leds | and brightness $brightness",
  "probots.oledClearScreen|block": "clear screen",
  "probots.oledSetNumber|block": "set number $myNumber in line $y at position $x",
  "probots.oledSetText|block": "set text $text in line $y at position $x",
  "probots.potentiometer|block": "value of potentiometer in %myPort=brickPortADC",
  "probots.rgbPortOff|block": "RGB LED on %myPort=brickPort4Pins turn off",
  "probots.rgbPortOnByTime|block": "RGB LED on %myPort=brickPort4Pins show color %color=colores_rgb by %duration|ms",
  "probots.rgbPortOn|block": "LED RGB on %myPort=brickPort4Pins show color %color=ColorLedRGB",
  "probots.servoProbot|block": "Servo on %myPort=brickPortADC degrees $degrees",
  "probots.showColor|block": "$leds=variables_get(leds_neopixel)|show color %rgb=Colores",
  "probots.showRainbow|block": "$leds=variables_get(leds_neopixel)|show rainbow colors",
  "probots.soilMostureLevel|block": "level soil mosture on %myPort=brickPortADC",
  "probots.soilMosture|block": "high soil mosture on %myPort=brickPort",
  "probots.start|block": "Start sensor with integration time %atime=TCS34725_ATIME and %gain=TCS34725_AGAIN",
  "probots.temperatureKY013|block": "Get Temperature on %myPort=brickPortADC",
  "probots.ultrasoundDistance|block": "distance on %myPort=brickPort",
  "probots.waterLevel|block": "water level on %myPort=brickPortADC",
  "probots|block": "probots",
  "soundIntensity.HIGH|block": "high",
  "soundIntensity.LOW|block": "low",
  "soundIntensity.MEDIUM|block": "medium",
  "tempType.celsius|block": "Celsius (*C)",
  "tempType.fahrenheit|block": "Fahrenheit (*F)",
  "{id:category}OLED12864_I2C": "OLED12864_I2C",
  "{id:category}Probots": "Probots",
  "{id:category}RegisterHelper": "RegisterHelper",
  "{id:subcategory}Active Buzzer": "Active Buzzer",
  "{id:subcategory}Capacitive Sensor": "Capacitive Sensor",
  "{id:subcategory}DHT11 Sensor": "DHT11 Sensor",
  "{id:subcategory}Hall Sensor": "Hall Sensor",
  "{id:subcategory}IR Flame Sensor": "IR Flame Sensor",
  "{id:subcategory}IR Sensor": "IR Sensor",
  "{id:subcategory}LDR Sensor": "LDR Sensor",
  "{id:subcategory}LED": "LED",
  "{id:subcategory}LED RGB": "LED RGB",
  "{id:subcategory}LED Strip NeoPixel": "LED Strip NeoPixel",
  "{id:subcategory}Laser": "Laser",
  "{id:subcategory}Limit Switch": "Limit Switch",
  "{id:subcategory}Miscellaneous": "Miscellaneous",
  "{id:subcategory}Motor": "Motor",
  "{id:subcategory}OLED Screen": "OLED Screen",
  "{id:subcategory}Pasive Buzzer": "Pasive Buzzer",
  "{id:subcategory}Potentiometer": "Potentiometer",
  "{id:subcategory}Push Button": "Push Button",
  "{id:subcategory}RGB Sensor": "RGB Sensor",
  "{id:subcategory}Servo Motor": "Servo Motor",
  "{id:subcategory}Soil Mosture": "Soil Mosture",
  "{id:subcategory}Sound Sensor": "Sound Sensor",
  "{id:subcategory}Temperature Sensor": "Temperature Sensor",
  "{id:subcategory}Ultrasonic Sensor": "Ultrasonic Sensor",
  "{id:subcategory}Water Level": "Water Level"
}